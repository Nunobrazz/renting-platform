module Test.Roles where

import Daml.Script
import DA.Date
import Interface.Types as Types (House(..), LeaseTerms(..))
import Platform.Role.Admin qualified as Admin
import Platform.Role.Operator qualified as Operator (Role(..))


data Parties = Parties
  with
    alice: Party
    bob: Party
    operator: Party
    admin: Party
    timeProvider: Party

data Contracts = Contracts
  with
    operatorRoleCid : ContractId Operator.Role
    adminRoleCid : ContractId Admin.Role

init = script do 

    alice <- allocateParty "Alice"                
    operator <- allocateParty "Operator"          
    bob <- allocateParty "Bob"                    
    charlie <- allocateParty "Charlie"                    
    admin <- allocateParty "Admin"               
    timeProvider <- allocateParty "TimeProvider"    


   
    let house = House with host=alice; address = "Telheiras"; details = "This is a nice house"; rent=100
        leaseTerms = LeaseTerms with rent=100; beginingDate = date 2023 Jan 1; paymentDates=[date 2023 Jan 2, date 2023 Feb 1, date 2023 Mar 1]; nArbitrators = 2
        parties = Parties with alice; bob; operator; admin; timeProvider


    operatorRoleCid <- submit operator do
      createCmd Operator.Role with operator
    
    adminOfferCid <- submit parties.operator do
      createCmd Admin.Offer with admin, operator

    adminRoleCid <- submit parties.admin do
      exerciseCmd adminOfferCid Admin.Accept  



    let contracts = Contracts with operatorRoleCid; adminRoleCid
    return (parties, contracts, house, leaseTerms)

