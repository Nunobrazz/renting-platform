module Test.Rent where

import Daml.Script
import Test.LAcreation 
import Interface.Types as Types 
import Time.Clock
import Time.Lifecycle.Evolve (ProcessEvent(..), AddLA(..))




assignment = do
    
  (parties, contracts, house, leaseTerms) <- laCreation
  

  let alice = parties.alice            
      operator = parties.operator      
      bob = parties.bob                
      timeProvider = parties.timeProvider
      
      operatorRoleCid = contracts.operatorRoleCid
      adminRoleCid = contracts.adminRoleCid
      laServiceCid = contracts.laServiceCid
      clockCid = contracts.clockCid
      evolveCid = contracts.evolveCid

      laKey = LAkey with tenant = bob; house 


  (clockCid, eventCid) <- submit timeProvider do
    exerciseCmd clockCid Advance with days=50

  evolveCid <- submit operator do 
    exerciseCmd evolveCid AddLA with laKey
  
  submit timeProvider do
    exerciseCmd evolveCid ProcessEvent with eventCid

  submit timeProvider do
    exerciseCmd evolveCid ProcessEvent with eventCid




  pure (parties, contracts, house, leaseTerms) 

