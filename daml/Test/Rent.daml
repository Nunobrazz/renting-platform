module Test.Rent where

import Daml.Script
import Test.LAcreation 
import Platform.Types.LA 
import Platform.Types.Common 
import Time.Clock
import Time.Lifecycle.Evolve (AddLA(..))
import Test.Roles qualified as Roles 



assignment : Script (Roles.Parties, Contracts, House, LeaseTerms)
assignment = do
    
  (parties, contracts, house, leaseTerms) <- laCreation
  

  let alice = parties.alice            
      operator = parties.operator      
      bob = parties.bob                
      timeProvider = parties.timeProvider
      
      operatorRoleCid = contracts.operatorRoleCid
      laServiceCid = contracts.laServiceCid
      clockCid = contracts.clockCid
      evolveCid = contracts.evolveCid

      laKey = LAkey with tenant = bob; house 


  clockCid<- submit timeProvider do
    exerciseCmd clockCid Advance with days=50

  evolveCid <- submit operator do 
    exerciseCmd evolveCid AddLA with laKey
  
  {--submit timeProvider do
    exerciseCmd evolveCid ProcessEvent with eventCid

  submit timeProvider do
    exerciseCmd evolveCid ProcessEvent with eventCid--}




  pure (parties, contracts, house, leaseTerms) 

